trigger:
  branches:
    include:
      - refs/tags/*
resources:
  repositories:
    - repository: MicroBuildTemplate
      type: git
      name: 1ESPipelineTemplates/MicroBuildTemplate
      ref: refs/tags/release
variables:
  - name: TeamName
    value: Pyright
  - name: VSIX_NAME
    value: vscode-pyright.vsix
  - name: ARTIFACT_NAME_VSIX
    value: vsix
  - name: AZURE_ARTIFACTS_FEED
    value: 'https://devdiv.pkgs.visualstudio.com/DevDiv/_packaging/Pylance_PublicPackages/npm/registry/'

extends:
  template: azure-pipelines/MicroBuild.1ES.Official.yml@MicroBuildTemplate
  parameters:
    sdl:
      codeSignValidation:
        enabled: false
        additionalTargetsGlobPattern: -|**/gdn-vscode-pyright.vsix/**
      codeql:
        compiled:
          enabled: false
          justificationForDisabling: 'Running a scan on the Pyright-Build azure-pipelines.yml'
      sourceAnalysisPool: VSEngSS-MicroBuild2022-1ES
    pool:
      pool:
      name: VSEngSS-MicroBuild2022-1ES
      os: windows
    customBuildTags:
      - ES365AIMigrationTooling
    stages:
      - stage: BuildVsix
        jobs:
          - job: build
            displayName: Build VSIX
            timeoutInMinutes: 60
            templateContext:
              mb:
                signing:
                  enabled: false
                  signType: 'real'
              outputs:
                - output: pipelineArtifact
                  displayName: 'publish vsix artifact'
                  targetPath: 'build_output'
                  artifactName: $(ARTIFACT_NAME_VSIX)
            steps:
              - checkout: self
                fetchDepth: 1
                clean: true
                submodules: true
                fetchTags: false
                persistCredentials: True
              - task: NodeTool@0
                displayName: Use Node 18.x
                inputs:
                  versionSpec: 18.x
              - template: /build/templates/npmAuthenticate.yml@self
              - task: CmdLine@2
                displayName: npm install
                inputs:
                  script: npm run install:all
              - task: CmdLine@2
                displayName: Package VSIX
                inputs:
                  script: |
                    npm run package
                  workingDirectory: packages/vscode-pyright

              - task: PowerShell@2
                inputs:
                  targetType: 'inline'
                  script: 'Move-Item -Path "pyright-*.vsix" -Destination "$(VSIX_NAME)"'
                  workingDirectory: packages/vscode-pyright
                displayName: 'Move VSIX file'

              - task: CopyFiles@2
                displayName: 'Copy vsix to: build_output'
                inputs:
                  SourceFolder: packages/vscode-pyright
                  Contents: '$(VSIX_NAME)'
                  TargetFolder: build_output

              - script: |
                  npm install -g @vscode/vsce
                displayName: 'Install vsce and dependencies'

              - script: npx vsce generate-manifest -i $(VSIX_NAME) -o extension.manifest
                displayName: 'Generate extension manifest'
                workingDirectory: packages/vscode-pyright

              - task: NuGetToolInstaller@1
                displayName: 'Install NuGet'

              - task: NuGetCommand@2
                inputs:
                  command: 'restore'
                  restoreSolution: '$(Build.SourcesDirectory)/packages/vscode-pyright/packages.config'
                  restoreDirectory: '$(Build.SourcesDirectory)/packages/vscode-pyright/packages'

              - task: CopyFiles@2
                displayName: 'Copy extension.manifest'
                inputs:
                  SourceFolder: 'packages/vscode-pyright'
                  Contents: 'extension.manifest'
                  TargetFolder: build_output

      - stage: CreateRelease
        dependsOn:
          - BuildVsix
        jobs:
          - job: create_release
            displayName: Create GitHub Release
            steps:
              - checkout: none
              - download: current
              - task: GitHubRelease@1 #https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/github-release-v1?view=azure-pipelines
                displayName: 'Create GitHub Release'
                inputs:
                  gitHubConnection: 'Github-Pylance' # The name of the GitHub service connection
                  repositoryName: 'microsoft/pyright' # The name of your GitHub repository
                  action: 'create'
                  isDraft: true
                  isPreRelease: false
                  addChangeLog: true
                  title: 'Published $(Build.SourceBranchName)'
                  assets: |
                    $(Pipeline.Workspace)/$(ARTIFACT_NAME_VSIX)/$(VSIX_NAME)
              - script: |
                  echo "Just want to test through GitHub Release creation"
                  exit 1
                displayName: 'Force job failure'
      - stage: WaitForValidation
        dependsOn:
          - CreateRelease
        jobs:
          - job: wait_for_validation
            displayName: Wait for manual validation
            pool: server
            steps:
              - task: ManualValidation@0
                timeoutInMinutes: 120 # task times out in 2 hours
                inputs:
                  notifyUsers: 'plseng@microsoft.com,eric@traut.com'
                  instructions: 'In the next 2 hours please test the latest draft release of Pyright, then Publish the release in GitHub.'
                  onTimeout: 'reject' # require sign-off
