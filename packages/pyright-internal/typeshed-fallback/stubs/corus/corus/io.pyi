from _typeshed import Incomplete
from collections.abc import Generator

def match_names(records, pattern) -> Generator[Incomplete]: ...
def rstrip(text): ...
def load_text(path): ...
def dump_text(text, path) -> None: ...
def load_lines(path, encoding: str = "utf-8") -> Generator[Incomplete]: ...
def parse_xml(text): ...
def load_z_lines(path, open, encoding: str = "utf8") -> Generator[Incomplete]: ...
def load_gz_lines(path): ...
def load_bz2_lines(path): ...
def load_xz_lines(path): ...
def list_zip(path): ...
def load_zip_lines(path, name, encoding: str = "utf8") -> Generator[Incomplete]: ...
def load_zip_texts(path, names, encoding: str = "utf8") -> Generator[Incomplete]: ...
def parse_csv(lines, delimiter: str = ",", max_field: Incomplete | None = None): ...
def parse_tsv(lines): ...
def skip_header(rows): ...
def dict_csv(rows) -> Generator[Incomplete]: ...
def parse_jsonl(lines) -> Generator[Incomplete]: ...
