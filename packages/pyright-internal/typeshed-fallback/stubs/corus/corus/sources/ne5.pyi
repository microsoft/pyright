from _typeshed import Incomplete
from collections.abc import Generator

from corus.record import Record

class Ne5Span(Record):
    __attributes__: Incomplete
    index: Incomplete
    type: Incomplete
    start: Incomplete
    stop: Incomplete
    text: Incomplete
    def __init__(self, index, type, start, stop, text) -> None: ...

class Ne5Markup(Record):
    __attributes__: Incomplete
    id: Incomplete
    text: Incomplete
    spans: Incomplete
    def __init__(self, id, text, spans) -> None: ...

def list_ids(dir) -> Generator[Incomplete]: ...
def txt_path(id, dir): ...
def ann_path(id, dir): ...
def parse_spans(lines) -> Generator[Incomplete]: ...
def load_text(path): ...
def load_id(id, dir): ...
def load_ne5(dir) -> Generator[Incomplete]: ...
