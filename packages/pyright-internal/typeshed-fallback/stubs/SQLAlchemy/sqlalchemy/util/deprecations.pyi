from _typeshed import Incomplete

from .langhelpers import (
    decorator as decorator,
    inject_docstring_text as inject_docstring_text,
    inject_param_text as inject_param_text,
)

SQLALCHEMY_WARN_20: bool

def warn_deprecated(msg, version, stacklevel: int = 3, code: Incomplete | None = None) -> None: ...
def warn_deprecated_limited(msg, args, version, stacklevel: int = 3, code: Incomplete | None = None) -> None: ...
def warn_deprecated_20(msg, stacklevel: int = 3, code: Incomplete | None = None) -> None: ...
def deprecated_cls(version, message, constructor: str = "__init__"): ...
def deprecated_20_cls(
    clsname, alternative: Incomplete | None = None, constructor: str = "__init__", becomes_legacy: bool = False
): ...
def deprecated(
    version,
    message: Incomplete | None = None,
    add_deprecation_to_docstring: bool = True,
    warning: Incomplete | None = None,
    enable_warnings: bool = True,
): ...
def moved_20(message, **kw): ...
def deprecated_20(api_name, alternative: Incomplete | None = None, becomes_legacy: bool = False, **kw): ...
def deprecated_params(**specs): ...
