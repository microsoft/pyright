from _typeshed import Incomplete

class ScraperTargetRequest:
    openapi_types: Incomplete
    attribute_map: Incomplete
    discriminator: Incomplete
    def __init__(
        self,
        name: Incomplete | None = ...,
        type: Incomplete | None = ...,
        url: Incomplete | None = ...,
        org_id: Incomplete | None = ...,
        bucket_id: Incomplete | None = ...,
        allow_insecure: bool = ...,
    ) -> None: ...
    @property
    def name(self): ...
    @name.setter
    def name(self, name) -> None: ...
    @property
    def type(self): ...
    @type.setter
    def type(self, type) -> None: ...
    @property
    def url(self): ...
    @url.setter
    def url(self, url) -> None: ...
    @property
    def org_id(self): ...
    @org_id.setter
    def org_id(self, org_id) -> None: ...
    @property
    def bucket_id(self): ...
    @bucket_id.setter
    def bucket_id(self, bucket_id) -> None: ...
    @property
    def allow_insecure(self): ...
    @allow_insecure.setter
    def allow_insecure(self, allow_insecure) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
