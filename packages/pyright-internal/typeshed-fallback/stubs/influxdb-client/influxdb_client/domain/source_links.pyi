from _typeshed import Incomplete

class SourceLinks:
    openapi_types: Incomplete
    attribute_map: Incomplete
    discriminator: Incomplete
    def __init__(
        self,
        _self: Incomplete | None = ...,
        query: Incomplete | None = ...,
        health: Incomplete | None = ...,
        buckets: Incomplete | None = ...,
    ) -> None: ...
    @property
    def query(self): ...
    @query.setter
    def query(self, query) -> None: ...
    @property
    def health(self): ...
    @health.setter
    def health(self, health) -> None: ...
    @property
    def buckets(self): ...
    @buckets.setter
    def buckets(self, buckets) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
